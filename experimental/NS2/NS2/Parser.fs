// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"

open System
open NS2.Ast

# 11 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | PLUS
  | MINUS
  | TIMES
  | DIVIDE
  | AT
  | PIPE
  | HASH
  | EQ
  | NEQ
  | EQEQ
  | GE
  | LE
  | GEQ
  | LEQ
  | AND
  | OR
  | NOT
  | MODULO
  | LPAREN
  | RPAREN
  | LBRACK
  | RBRACK
  | LCURLY
  | RCURLY
  | COMMA
  | SEMICOLON
  | COLON
  | IF
  | ELSE
  | WHILE
  | EOF
  | OPEQ of (string)
  | STRING of (string)
  | ID of (string)
  | INT of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIVIDE
    | TOKEN_AT
    | TOKEN_PIPE
    | TOKEN_HASH
    | TOKEN_EQ
    | TOKEN_NEQ
    | TOKEN_EQEQ
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_GEQ
    | TOKEN_LEQ
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_NOT
    | TOKEN_MODULO
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_LCURLY
    | TOKEN_RCURLY
    | TOKEN_COMMA
    | TOKEN_SEMICOLON
    | TOKEN_COLON
    | TOKEN_IF
    | TOKEN_ELSE
    | TOKEN_WHILE
    | TOKEN_EOF
    | TOKEN_OPEQ
    | TOKEN_STRING
    | TOKEN_ID
    | TOKEN_INT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startmain
    | NONTERM_main
    | NONTERM_expr
    | NONTERM_op
    | NONTERM_while_expr
    | NONTERM_while_body
    | NONTERM_if_expr
    | NONTERM_if_body
    | NONTERM_pipe_expr
    | NONTERM_pipe_entry
    | NONTERM_arr
    | NONTERM_element_list
    | NONTERM_funcblock
    | NONTERM_block
    | NONTERM_body_list
    | NONTERM_call
    | NONTERM_arg_list

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | PLUS  -> 0 
  | MINUS  -> 1 
  | TIMES  -> 2 
  | DIVIDE  -> 3 
  | AT  -> 4 
  | PIPE  -> 5 
  | HASH  -> 6 
  | EQ  -> 7 
  | NEQ  -> 8 
  | EQEQ  -> 9 
  | GE  -> 10 
  | LE  -> 11 
  | GEQ  -> 12 
  | LEQ  -> 13 
  | AND  -> 14 
  | OR  -> 15 
  | NOT  -> 16 
  | MODULO  -> 17 
  | LPAREN  -> 18 
  | RPAREN  -> 19 
  | LBRACK  -> 20 
  | RBRACK  -> 21 
  | LCURLY  -> 22 
  | RCURLY  -> 23 
  | COMMA  -> 24 
  | SEMICOLON  -> 25 
  | COLON  -> 26 
  | IF  -> 27 
  | ELSE  -> 28 
  | WHILE  -> 29 
  | EOF  -> 30 
  | OPEQ _ -> 31 
  | STRING _ -> 32 
  | ID _ -> 33 
  | INT _ -> 34 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_PLUS 
  | 1 -> TOKEN_MINUS 
  | 2 -> TOKEN_TIMES 
  | 3 -> TOKEN_DIVIDE 
  | 4 -> TOKEN_AT 
  | 5 -> TOKEN_PIPE 
  | 6 -> TOKEN_HASH 
  | 7 -> TOKEN_EQ 
  | 8 -> TOKEN_NEQ 
  | 9 -> TOKEN_EQEQ 
  | 10 -> TOKEN_GE 
  | 11 -> TOKEN_LE 
  | 12 -> TOKEN_GEQ 
  | 13 -> TOKEN_LEQ 
  | 14 -> TOKEN_AND 
  | 15 -> TOKEN_OR 
  | 16 -> TOKEN_NOT 
  | 17 -> TOKEN_MODULO 
  | 18 -> TOKEN_LPAREN 
  | 19 -> TOKEN_RPAREN 
  | 20 -> TOKEN_LBRACK 
  | 21 -> TOKEN_RBRACK 
  | 22 -> TOKEN_LCURLY 
  | 23 -> TOKEN_RCURLY 
  | 24 -> TOKEN_COMMA 
  | 25 -> TOKEN_SEMICOLON 
  | 26 -> TOKEN_COLON 
  | 27 -> TOKEN_IF 
  | 28 -> TOKEN_ELSE 
  | 29 -> TOKEN_WHILE 
  | 30 -> TOKEN_EOF 
  | 31 -> TOKEN_OPEQ 
  | 32 -> TOKEN_STRING 
  | 33 -> TOKEN_ID 
  | 34 -> TOKEN_INT 
  | 37 -> TOKEN_end_of_input
  | 35 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startmain 
    | 1 -> NONTERM_main 
    | 2 -> NONTERM_main 
    | 3 -> NONTERM_main 
    | 4 -> NONTERM_expr 
    | 5 -> NONTERM_expr 
    | 6 -> NONTERM_expr 
    | 7 -> NONTERM_expr 
    | 8 -> NONTERM_expr 
    | 9 -> NONTERM_expr 
    | 10 -> NONTERM_expr 
    | 11 -> NONTERM_expr 
    | 12 -> NONTERM_expr 
    | 13 -> NONTERM_expr 
    | 14 -> NONTERM_expr 
    | 15 -> NONTERM_expr 
    | 16 -> NONTERM_expr 
    | 17 -> NONTERM_expr 
    | 18 -> NONTERM_expr 
    | 19 -> NONTERM_expr 
    | 20 -> NONTERM_expr 
    | 21 -> NONTERM_expr 
    | 22 -> NONTERM_expr 
    | 23 -> NONTERM_expr 
    | 24 -> NONTERM_expr 
    | 25 -> NONTERM_expr 
    | 26 -> NONTERM_expr 
    | 27 -> NONTERM_expr 
    | 28 -> NONTERM_expr 
    | 29 -> NONTERM_expr 
    | 30 -> NONTERM_expr 
    | 31 -> NONTERM_expr 
    | 32 -> NONTERM_expr 
    | 33 -> NONTERM_expr 
    | 34 -> NONTERM_op 
    | 35 -> NONTERM_op 
    | 36 -> NONTERM_while_expr 
    | 37 -> NONTERM_while_body 
    | 38 -> NONTERM_while_body 
    | 39 -> NONTERM_if_expr 
    | 40 -> NONTERM_if_expr 
    | 41 -> NONTERM_if_body 
    | 42 -> NONTERM_if_body 
    | 43 -> NONTERM_pipe_expr 
    | 44 -> NONTERM_pipe_expr 
    | 45 -> NONTERM_pipe_entry 
    | 46 -> NONTERM_pipe_entry 
    | 47 -> NONTERM_arr 
    | 48 -> NONTERM_arr 
    | 49 -> NONTERM_element_list 
    | 50 -> NONTERM_element_list 
    | 51 -> NONTERM_funcblock 
    | 52 -> NONTERM_block 
    | 53 -> NONTERM_block 
    | 54 -> NONTERM_body_list 
    | 55 -> NONTERM_body_list 
    | 56 -> NONTERM_body_list 
    | 57 -> NONTERM_call 
    | 58 -> NONTERM_arg_list 
    | 59 -> NONTERM_arg_list 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 37 
let _fsyacc_tagOfErrorTerminal = 35

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIVIDE  -> "DIVIDE" 
  | AT  -> "AT" 
  | PIPE  -> "PIPE" 
  | HASH  -> "HASH" 
  | EQ  -> "EQ" 
  | NEQ  -> "NEQ" 
  | EQEQ  -> "EQEQ" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | GEQ  -> "GEQ" 
  | LEQ  -> "LEQ" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | NOT  -> "NOT" 
  | MODULO  -> "MODULO" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | LCURLY  -> "LCURLY" 
  | RCURLY  -> "RCURLY" 
  | COMMA  -> "COMMA" 
  | SEMICOLON  -> "SEMICOLON" 
  | COLON  -> "COLON" 
  | IF  -> "IF" 
  | ELSE  -> "ELSE" 
  | WHILE  -> "WHILE" 
  | EOF  -> "EOF" 
  | OPEQ _ -> "OPEQ" 
  | STRING _ -> "STRING" 
  | ID _ -> "ID" 
  | INT _ -> "INT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIVIDE  -> (null : System.Object) 
  | AT  -> (null : System.Object) 
  | PIPE  -> (null : System.Object) 
  | HASH  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NEQ  -> (null : System.Object) 
  | EQEQ  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | GEQ  -> (null : System.Object) 
  | LEQ  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | MODULO  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | LCURLY  -> (null : System.Object) 
  | RCURLY  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | OPEQ _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;1us;65535us;0us;1us;33us;65535us;0us;34us;6us;7us;35us;35us;36us;10us;37us;9us;38us;11us;39us;12us;40us;13us;41us;14us;42us;15us;43us;16us;44us;17us;45us;18us;46us;19us;47us;20us;48us;21us;49us;22us;50us;23us;51us;24us;52us;25us;53us;26us;55us;27us;70us;28us;71us;29us;75us;30us;76us;31us;78us;31us;83us;32us;85us;33us;89us;33us;92us;34us;96us;34us;98us;35us;60us;65535us;0us;55us;6us;55us;7us;36us;9us;36us;10us;36us;11us;36us;12us;36us;13us;36us;14us;36us;15us;36us;16us;36us;17us;36us;18us;36us;19us;36us;20us;36us;21us;36us;22us;36us;23us;36us;24us;36us;25us;36us;26us;36us;27us;36us;28us;36us;29us;36us;30us;36us;31us;36us;32us;36us;33us;36us;34us;36us;35us;37us;36us;55us;37us;55us;38us;55us;39us;55us;40us;55us;41us;55us;42us;55us;43us;55us;44us;55us;45us;55us;46us;55us;47us;55us;48us;55us;49us;55us;50us;55us;51us;55us;52us;55us;53us;55us;55us;55us;70us;55us;71us;55us;75us;55us;76us;55us;78us;55us;83us;55us;85us;55us;89us;55us;92us;55us;96us;55us;98us;55us;33us;65535us;0us;57us;6us;57us;35us;57us;36us;57us;37us;57us;38us;57us;39us;57us;40us;57us;41us;57us;42us;57us;43us;57us;44us;57us;45us;57us;46us;57us;47us;57us;48us;57us;49us;57us;50us;57us;51us;57us;52us;57us;53us;57us;55us;57us;70us;57us;71us;57us;75us;57us;76us;57us;78us;57us;83us;57us;85us;57us;89us;57us;92us;57us;96us;57us;98us;57us;1us;65535us;71us;72us;33us;65535us;0us;56us;6us;56us;35us;56us;36us;56us;37us;56us;38us;56us;39us;56us;40us;56us;41us;56us;42us;56us;43us;56us;44us;56us;45us;56us;46us;56us;47us;56us;48us;56us;49us;56us;50us;56us;51us;56us;52us;56us;53us;56us;55us;56us;70us;56us;71us;56us;75us;56us;76us;56us;78us;56us;83us;56us;85us;56us;89us;56us;92us;56us;96us;56us;98us;56us;2us;65535us;76us;77us;78us;79us;33us;65535us;0us;59us;6us;59us;35us;59us;36us;59us;37us;59us;38us;59us;39us;59us;40us;59us;41us;59us;42us;59us;43us;59us;44us;59us;45us;59us;46us;59us;47us;59us;48us;59us;49us;59us;50us;59us;51us;59us;52us;59us;53us;59us;55us;59us;70us;59us;71us;59us;75us;59us;76us;59us;78us;59us;83us;60us;85us;59us;89us;59us;92us;59us;96us;59us;98us;59us;33us;65535us;0us;82us;6us;82us;35us;82us;36us;82us;37us;82us;38us;82us;39us;82us;40us;82us;41us;82us;42us;82us;43us;82us;44us;82us;45us;82us;46us;82us;47us;82us;48us;82us;49us;82us;50us;82us;51us;82us;52us;82us;53us;82us;55us;82us;70us;82us;71us;82us;75us;82us;76us;82us;78us;82us;83us;81us;85us;82us;89us;82us;92us;82us;96us;82us;98us;82us;33us;65535us;0us;58us;6us;58us;35us;58us;36us;58us;37us;58us;38us;58us;39us;58us;40us;58us;41us;58us;42us;58us;43us;58us;44us;58us;45us;58us;46us;58us;47us;58us;48us;58us;49us;58us;50us;58us;51us;58us;52us;58us;53us;58us;55us;58us;70us;58us;71us;58us;75us;58us;76us;58us;78us;58us;83us;58us;85us;58us;89us;58us;92us;58us;96us;58us;98us;58us;2us;65535us;85us;87us;89us;90us;60us;65535us;0us;84us;6us;84us;7us;61us;9us;61us;10us;61us;11us;61us;12us;61us;13us;61us;14us;61us;15us;61us;16us;61us;17us;61us;18us;61us;19us;61us;20us;61us;21us;61us;22us;61us;23us;61us;24us;61us;25us;61us;26us;61us;27us;61us;28us;61us;29us;61us;30us;61us;31us;61us;32us;61us;33us;61us;34us;61us;35us;62us;36us;84us;37us;84us;38us;84us;39us;84us;40us;84us;41us;84us;42us;84us;43us;84us;44us;84us;45us;84us;46us;84us;47us;84us;48us;84us;49us;84us;50us;84us;51us;84us;52us;84us;53us;54us;55us;84us;70us;84us;71us;84us;75us;84us;76us;84us;78us;84us;83us;84us;85us;84us;89us;84us;92us;84us;96us;84us;98us;84us;60us;65535us;0us;91us;6us;91us;7us;91us;9us;91us;10us;91us;11us;91us;12us;91us;13us;91us;14us;91us;15us;91us;16us;91us;17us;91us;18us;91us;19us;91us;20us;91us;21us;91us;22us;91us;23us;91us;24us;91us;25us;91us;26us;91us;27us;91us;28us;91us;29us;91us;30us;91us;31us;91us;32us;91us;33us;91us;34us;91us;35us;91us;36us;91us;37us;91us;38us;91us;39us;91us;40us;91us;41us;91us;42us;91us;43us;91us;44us;91us;45us;91us;46us;91us;47us;91us;48us;91us;49us;91us;50us;91us;51us;91us;52us;91us;53us;91us;55us;91us;70us;91us;71us;73us;75us;91us;76us;80us;78us;80us;83us;91us;85us;91us;89us;91us;92us;91us;96us;91us;98us;91us;3us;65535us;0us;2us;92us;94us;96us;97us;33us;65535us;0us;65us;6us;65us;35us;65us;36us;65us;37us;65us;38us;65us;39us;65us;40us;65us;41us;65us;42us;65us;43us;65us;44us;65us;45us;65us;46us;65us;47us;65us;48us;65us;49us;65us;50us;65us;51us;65us;52us;65us;53us;65us;55us;65us;70us;65us;71us;65us;75us;65us;76us;65us;78us;65us;83us;65us;85us;65us;89us;65us;92us;65us;96us;65us;98us;65us;2us;65535us;35us;100us;98us;99us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;3us;37us;98us;132us;134us;168us;171us;205us;239us;273us;276us;337us;398us;402us;436us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;2us;1us;2us;1us;2us;1us;3us;1us;3us;1us;4us;21us;4us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;45us;1us;4us;22us;5us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;28us;45us;21us;5us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;45us;21us;5us;6us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;45us;21us;5us;6us;7us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;45us;21us;5us;6us;7us;8us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;45us;21us;5us;6us;7us;8us;9us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;45us;21us;5us;6us;7us;8us;9us;10us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;45us;21us;5us;6us;7us;8us;9us;10us;11us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;45us;21us;5us;6us;7us;8us;9us;10us;11us;12us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;45us;21us;5us;6us;7us;8us;9us;10us;11us;12us;13us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;45us;21us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;45us;21us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;15us;16us;17us;18us;19us;20us;21us;22us;28us;45us;21us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;16us;17us;18us;19us;20us;21us;22us;28us;45us;21us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;17us;18us;19us;20us;21us;22us;28us;45us;21us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;18us;19us;20us;21us;22us;28us;45us;21us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;19us;20us;21us;22us;28us;45us;21us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;20us;21us;22us;28us;45us;21us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;21us;22us;28us;45us;21us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;28us;45us;21us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;36us;45us;21us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;37us;45us;22us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;39us;40us;45us;21us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;41us;45us;20us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;45us;22us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;45us;49us;50us;23us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;45us;54us;55us;56us;22us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;28us;45us;58us;59us;1us;5us;3us;5us;23us;31us;1us;6us;1us;7us;1us;8us;1us;9us;1us;10us;1us;11us;1us;12us;1us;13us;1us;14us;1us;15us;1us;16us;1us;17us;1us;18us;1us;19us;1us;20us;2us;21us;22us;2us;22us;46us;2us;23us;31us;1us;24us;1us;25us;1us;26us;1us;27us;2us;27us;44us;1us;28us;2us;28us;46us;1us;29us;1us;30us;1us;32us;2us;33us;57us;1us;34us;1us;35us;1us;36us;1us;36us;1us;36us;1us;36us;2us;38us;51us;2us;39us;40us;2us;39us;40us;2us;39us;40us;2us;39us;40us;1us;39us;1us;39us;2us;42us;51us;3us;43us;43us;44us;2us;43us;44us;2us;43us;44us;1us;46us;2us;47us;48us;1us;47us;1us;48us;1us;48us;1us;50us;1us;50us;1us;51us;2us;52us;53us;1us;52us;1us;53us;1us;53us;2us;55us;56us;1us;56us;1us;57us;1us;57us;1us;59us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;7us;9us;11us;13us;15us;37us;39us;62us;84us;106us;128us;150us;172us;194us;216us;238us;260us;282us;304us;326us;348us;370us;392us;414us;436us;458us;480us;502us;525us;547us;568us;591us;615us;638us;640us;644us;646us;648us;650us;652us;654us;656us;658us;660us;662us;664us;666us;668us;670us;672us;674us;677us;680us;683us;685us;687us;689us;691us;694us;696us;699us;701us;703us;705us;708us;710us;712us;714us;716us;718us;720us;723us;726us;729us;732us;735us;737us;739us;742us;746us;749us;752us;754us;757us;759us;761us;763us;765us;767us;769us;772us;774us;776us;778us;781us;783us;785us;787us;|]
let _fsyacc_action_rows = 101
let _fsyacc_actionTableElements = [|11us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;35us;4us;0us;49152us;1us;16385us;25us;3us;0us;16386us;1us;32768us;30us;5us;0us;16387us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;20us;16429us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;8us;44us;9us;43us;10us;45us;11us;46us;12us;47us;13us;48us;14us;49us;15us;50us;16us;68us;17us;42us;19us;8us;22us;92us;31us;52us;0us;16388us;19us;16389us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;8us;44us;9us;43us;10us;45us;11us;46us;12us;47us;13us;48us;14us;49us;15us;50us;16us;68us;17us;42us;22us;92us;31us;52us;19us;16389us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;8us;44us;9us;43us;10us;45us;11us;46us;12us;47us;13us;48us;14us;49us;15us;50us;16us;68us;17us;42us;22us;92us;31us;52us;9us;16390us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;16us;68us;17us;42us;22us;92us;31us;52us;9us;16391us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;16us;68us;17us;42us;22us;92us;31us;52us;6us;16392us;4us;51us;6us;67us;7us;53us;16us;68us;22us;92us;31us;52us;6us;16393us;4us;51us;6us;67us;7us;53us;16us;68us;22us;92us;31us;52us;6us;16394us;4us;51us;6us;67us;7us;53us;16us;68us;22us;92us;31us;52us;11us;16395us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;16us;68us;17us;42us;22us;92us;31us;52us;11us;16396us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;16us;68us;17us;42us;22us;92us;31us;52us;11us;16397us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;16us;68us;17us;42us;22us;92us;31us;52us;11us;16398us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;16us;68us;17us;42us;22us;92us;31us;52us;11us;16399us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;16us;68us;17us;42us;22us;92us;31us;52us;11us;16400us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;16us;68us;17us;42us;22us;92us;31us;52us;17us;16401us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;8us;44us;9us;43us;10us;45us;11us;46us;12us;47us;13us;48us;16us;68us;17us;42us;22us;92us;31us;52us;17us;16402us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;8us;44us;9us;43us;10us;45us;11us;46us;12us;47us;13us;48us;16us;68us;17us;42us;22us;92us;31us;52us;4us;16403us;6us;67us;7us;53us;22us;92us;31us;52us;19us;16404us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;8us;44us;9us;43us;10us;45us;11us;46us;12us;47us;13us;48us;14us;49us;15us;50us;16us;68us;17us;42us;22us;92us;31us;52us;19us;16405us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;8us;44us;9us;43us;10us;45us;11us;46us;12us;47us;13us;48us;14us;49us;15us;50us;16us;68us;17us;42us;22us;92us;31us;52us;19us;16407us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;8us;44us;9us;43us;10us;45us;11us;46us;12us;47us;13us;48us;14us;49us;15us;50us;16us;68us;17us;42us;22us;92us;31us;52us;20us;16429us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;8us;44us;9us;43us;10us;45us;11us;46us;12us;47us;13us;48us;14us;49us;15us;50us;16us;68us;17us;42us;19us;71us;22us;92us;31us;52us;19us;16421us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;8us;44us;9us;43us;10us;45us;11us;46us;12us;47us;13us;48us;14us;49us;15us;50us;16us;68us;17us;42us;22us;92us;31us;52us;20us;16429us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;8us;44us;9us;43us;10us;45us;11us;46us;12us;47us;13us;48us;14us;49us;15us;50us;16us;68us;17us;42us;19us;76us;22us;92us;31us;52us;19us;16425us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;8us;44us;9us;43us;10us;45us;11us;46us;12us;47us;13us;48us;14us;49us;15us;50us;16us;68us;17us;42us;22us;92us;31us;52us;19us;16429us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;8us;44us;9us;43us;10us;45us;11us;46us;12us;47us;13us;48us;14us;49us;15us;50us;16us;68us;17us;42us;22us;92us;31us;52us;21us;16429us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;8us;44us;9us;43us;10us;45us;11us;46us;12us;47us;13us;48us;14us;49us;15us;50us;16us;68us;17us;42us;21us;16433us;22us;92us;24us;89us;31us;52us;22us;16429us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;6us;67us;7us;53us;8us;44us;9us;43us;10us;45us;11us;46us;12us;47us;13us;48us;14us;49us;15us;50us;16us;68us;17us;42us;22us;92us;23us;16438us;25us;96us;31us;52us;37us;16438us;31us;16442us;0us;38us;1us;39us;2us;40us;3us;41us;4us;51us;5us;16429us;6us;67us;7us;53us;8us;44us;9us;43us;10us;45us;11us;46us;12us;47us;13us;48us;14us;49us;15us;50us;16us;68us;17us;42us;18us;6us;20us;85us;22us;92us;26us;16429us;27us;74us;29us;69us;30us;16429us;31us;52us;32us;64us;33us;66us;34us;63us;35us;16429us;36us;16429us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;16415us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;0us;16406us;10us;16415us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;0us;16408us;0us;16409us;0us;16410us;0us;16411us;0us;16411us;0us;16412us;0us;16412us;0us;16413us;0us;16414us;0us;16416us;1us;16417us;26us;98us;0us;16418us;0us;16419us;1us;32768us;18us;70us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;0us;16420us;0us;16422us;1us;32768us;18us;75us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;1us;16424us;28us;78us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;0us;16423us;0us;16426us;1us;16427us;5us;83us;1us;32768us;5us;83us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;0us;16430us;11us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;21us;86us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;0us;16431us;1us;32768us;21us;88us;0us;16432us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;0us;16434us;0us;16435us;11us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;23us;93us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;0us;16436us;1us;32768us;23us;95us;0us;16437us;10us;16439us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;0us;16440us;10us;32768us;6us;67us;16us;68us;18us;6us;20us;85us;22us;92us;27us;74us;29us;69us;32us;64us;33us;66us;34us;63us;0us;16441us;0us;16443us;|]
let _fsyacc_actionTableRowOffsets = [|0us;12us;13us;15us;16us;18us;19us;30us;51us;52us;72us;92us;102us;112us;119us;126us;133us;145us;157us;169us;181us;193us;205us;223us;241us;246us;266us;286us;306us;327us;347us;368us;388us;408us;430us;453us;485us;496us;507us;518us;529us;540us;551us;562us;573us;584us;595us;606us;617us;628us;639us;650us;661us;672us;683us;684us;695us;696us;697us;698us;699us;700us;701us;702us;703us;704us;705us;707us;708us;709us;711us;722us;733us;734us;735us;737us;748us;759us;761us;772us;773us;774us;776us;778us;789us;790us;802us;803us;805us;806us;817us;818us;819us;831us;832us;834us;835us;846us;847us;858us;859us;|]
let _fsyacc_reductionSymbolCounts = [|1us;1us;2us;2us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;2us;1us;1us;1us;1us;2us;1us;1us;1us;1us;1us;1us;1us;5us;1us;1us;7us;5us;1us;1us;3us;3us;1us;1us;2us;3us;1us;3us;1us;2us;3us;1us;2us;3us;3us;1us;2us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;1us;1us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;3us;3us;4us;5us;5us;6us;6us;7us;7us;8us;8us;9us;9us;10us;10us;11us;11us;12us;13us;13us;14us;14us;14us;15us;16us;16us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;16386us;65535us;16387us;65535us;65535us;16388us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16408us;16409us;16410us;16411us;65535us;16412us;65535us;16413us;16414us;16416us;65535us;16418us;16419us;65535us;65535us;65535us;16420us;65535us;65535us;65535us;65535us;65535us;65535us;16423us;65535us;65535us;65535us;65535us;16430us;65535us;16431us;65535us;16432us;65535us;16434us;16435us;65535us;16436us;65535us;16437us;65535us;16440us;65535us;16441us;16443us;|]
let _fsyacc_reductions = lazy [|
# 345 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> NS2.Ast.AST in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startmain));
# 354 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_body_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 31 "Parser.fsy"
                                                Root _1 
                   )
# 31 "Parser.fsy"
                 : NS2.Ast.AST));
# 365 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_body_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 32 "Parser.fsy"
                                                Root _1 
                   )
# 32 "Parser.fsy"
                 : NS2.Ast.AST));
# 376 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 33 "Parser.fsy"
                                                printfn "Syntax error at top-level"; raise (Parser.Error) 
                   )
# 33 "Parser.fsy"
                 : NS2.Ast.AST));
# 386 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 36 "Parser.fsy"
                                                    _2 
                   )
# 36 "Parser.fsy"
                 : 'gentype_expr));
# 397 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_op in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 37 "Parser.fsy"
                                                Binop (_1, _2, _3) 
                   )
# 37 "Parser.fsy"
                 : 'gentype_expr));
# 410 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 38 "Parser.fsy"
                                              Binop (_1, "+", _3) 
                   )
# 38 "Parser.fsy"
                 : 'gentype_expr));
# 422 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 39 "Parser.fsy"
                                              Binop (_1, "-", _3) 
                   )
# 39 "Parser.fsy"
                 : 'gentype_expr));
# 434 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 40 "Parser.fsy"
                                              Binop (_1, "*", _3) 
                   )
# 40 "Parser.fsy"
                 : 'gentype_expr));
# 446 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 41 "Parser.fsy"
                                                Binop (_1, "/", _3) 
                   )
# 41 "Parser.fsy"
                 : 'gentype_expr));
# 458 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 42 "Parser.fsy"
                                                            Binop(_1, "%", _3) 
                   )
# 42 "Parser.fsy"
                 : 'gentype_expr));
# 470 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 44 "Parser.fsy"
                                                               Binop(_1, "==", _3) 
                   )
# 44 "Parser.fsy"
                 : 'gentype_expr));
# 482 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "Parser.fsy"
                                                               Binop(_1, "!=", _3) 
                   )
# 45 "Parser.fsy"
                 : 'gentype_expr));
# 494 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "Parser.fsy"
                                                               Binop(_1, ">",  _3) 
                   )
# 46 "Parser.fsy"
                 : 'gentype_expr));
# 506 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 47 "Parser.fsy"
                                                               Binop(_1, "<",  _3) 
                   )
# 47 "Parser.fsy"
                 : 'gentype_expr));
# 518 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 48 "Parser.fsy"
                                                               Binop(_1, ">=", _3) 
                   )
# 48 "Parser.fsy"
                 : 'gentype_expr));
# 530 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "Parser.fsy"
                                                               Binop(_1, "<=", _3) 
                   )
# 49 "Parser.fsy"
                 : 'gentype_expr));
# 542 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "Parser.fsy"
                                                               Binop(_1, "&&", _3) 
                   )
# 51 "Parser.fsy"
                 : 'gentype_expr));
# 554 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "Parser.fsy"
                                                               Binop(_1, "||", _3) 
                   )
# 52 "Parser.fsy"
                 : 'gentype_expr));
# 566 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "Parser.fsy"
                                             Index (_1, _3) 
                   )
# 54 "Parser.fsy"
                 : 'gentype_expr));
# 578 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "Parser.fsy"
                                                            Assign (_1, Binop(_1, _2[.._2.Length-2], _3))
                   )
# 55 "Parser.fsy"
                 : 'gentype_expr));
# 591 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "Parser.fsy"
                                                            Assign (_1, _3)
                   )
# 56 "Parser.fsy"
                 : 'gentype_expr));
# 603 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_funcblock in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "Parser.fsy"
                                                            Assign (_1, _3)
                   )
# 57 "Parser.fsy"
                 : 'gentype_expr));
# 615 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_op in
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "Parser.fsy"
                                                            Unaryop (_1, _2)
                   )
# 58 "Parser.fsy"
                 : 'gentype_expr));
# 627 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_if_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "Parser.fsy"
                                                            _1 
                   )
# 59 "Parser.fsy"
                 : 'gentype_expr));
# 638 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_while_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "Parser.fsy"
                                                            _1 
                   )
# 60 "Parser.fsy"
                 : 'gentype_expr));
# 649 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_arr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "Parser.fsy"
                                      _1 
                   )
# 61 "Parser.fsy"
                 : 'gentype_expr));
# 660 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pipe_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "Parser.fsy"
                                          Pipe _1 
                   )
# 62 "Parser.fsy"
                 : 'gentype_expr));
# 671 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_funcblock in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "Parser.fsy"
                                              Map (_1, _2) 
                   )
# 63 "Parser.fsy"
                 : 'gentype_expr));
# 683 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "Parser.fsy"
                                     Int _1 
                   )
# 64 "Parser.fsy"
                 : 'gentype_expr));
# 694 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "Parser.fsy"
                                       String _1 
                   )
# 65 "Parser.fsy"
                 : 'gentype_expr));
# 705 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_op in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "Parser.fsy"
                                    Id _1 
                   )
# 66 "Parser.fsy"
                 : 'gentype_expr));
# 716 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_call in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "Parser.fsy"
                                         _1 
                   )
# 67 "Parser.fsy"
                 : 'gentype_expr));
# 727 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "Parser.fsy"
                                    Id _1 
                   )
# 68 "Parser.fsy"
                 : 'gentype_expr));
# 738 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "Parser.fsy"
                                       "#"  
                   )
# 71 "Parser.fsy"
                 : 'gentype_op));
# 748 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "Parser.fsy"
                                       "!"  
                   )
# 72 "Parser.fsy"
                 : 'gentype_op));
# 758 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_while_body in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "Parser.fsy"
                                                               While (_3,_5) 
                   )
# 75 "Parser.fsy"
                 : 'gentype_while_expr));
# 770 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "Parser.fsy"
                                                              _1
                   )
# 78 "Parser.fsy"
                 : 'gentype_while_body));
# 781 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "Parser.fsy"
                                                              _1
                   )
# 79 "Parser.fsy"
                 : 'gentype_while_body));
# 792 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_if_body in
            let _7 = parseState.GetInput(7) :?> 'gentype_if_body in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "Parser.fsy"
                                                                             If(_3,_5,Some _7)
                   )
# 82 "Parser.fsy"
                 : 'gentype_if_expr));
# 805 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_if_body in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "Parser.fsy"
                                                                             If(_3,_5, None)
                   )
# 83 "Parser.fsy"
                 : 'gentype_if_expr));
# 817 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "Parser.fsy"
                                                              _1
                   )
# 86 "Parser.fsy"
                 : 'gentype_if_body));
# 828 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "Parser.fsy"
                                                              _1
                   )
# 87 "Parser.fsy"
                 : 'gentype_if_body));
# 839 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pipe_entry in
            let _3 = parseState.GetInput(3) :?> 'gentype_pipe_entry in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "Parser.fsy"
                                                                     [_1;_3] 
                   )
# 90 "Parser.fsy"
                 : 'gentype_pipe_expr));
# 851 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pipe_entry in
            let _3 = parseState.GetInput(3) :?> 'gentype_pipe_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "Parser.fsy"
                                                                     _1::_3 
                   )
# 91 "Parser.fsy"
                 : 'gentype_pipe_expr));
# 863 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "Parser.fsy"
                                                              _1
                   )
# 94 "Parser.fsy"
                 : 'gentype_pipe_entry));
# 874 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_funcblock in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "Parser.fsy"
                                                              _1
                   )
# 95 "Parser.fsy"
                 : 'gentype_pipe_entry));
# 885 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "Parser.fsy"
                                             Array [] 
                   )
# 98 "Parser.fsy"
                 : 'gentype_arr));
# 895 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_element_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "Parser.fsy"
                                                      Array _2 
                   )
# 99 "Parser.fsy"
                 : 'gentype_arr));
# 906 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "Parser.fsy"
                                      [_1] 
                   )
# 102 "Parser.fsy"
                 : 'gentype_element_list));
# 917 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_element_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "Parser.fsy"
                                                     _1 :: _3 
                   )
# 103 "Parser.fsy"
                 : 'gentype_element_list));
# 929 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "Parser.fsy"
                                                               Func _1 
                   )
# 106 "Parser.fsy"
                 : 'gentype_funcblock));
# 940 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "Parser.fsy"
                                             Block [] 
                   )
# 109 "Parser.fsy"
                 : 'gentype_block));
# 950 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_body_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "Parser.fsy"
                                                    Block _2 
                   )
# 110 "Parser.fsy"
                 : 'gentype_block));
# 961 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "Parser.fsy"
                                      [_1] 
                   )
# 113 "Parser.fsy"
                 : 'gentype_body_list));
# 972 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "Parser.fsy"
                                             [_1] 
                   )
# 114 "Parser.fsy"
                 : 'gentype_body_list));
# 983 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_body_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "Parser.fsy"
                                                      _1 :: _3 
                   )
# 115 "Parser.fsy"
                 : 'gentype_body_list));
# 995 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "Parser.fsy"
                                                                     Call (_1, _3)
                   )
# 118 "Parser.fsy"
                 : 'gentype_call));
# 1007 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "Parser.fsy"
                                      [_1] 
                   )
# 121 "Parser.fsy"
                 : 'gentype_arg_list));
# 1018 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "Parser.fsy"
                                                   _1 :: _2 
                   )
# 122 "Parser.fsy"
                 : 'gentype_arg_list));
|]
# 1031 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 38;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let main lexer lexbuf : NS2.Ast.AST =
    engine lexer lexbuf 0 :?> _
