# source to source compiler. [LANG name]-to-C compiler.
# this is a comment.

import stdio;
%langflags: tail-free;

var a = 5;
var b = 11;

var add = func [a,b] : int {
	return a+b;
};

var c = add: a b;
print: add: a b;
print: c;

var d = 1;
c = d;                      #c and d has to be same type

var array = 1..5;           #[1,2,3,4,5]
print: array.length;        #5
var array2 = array[1:3];    #[1,2,3]

array.map: (i) -> print: i;     # 1,2,3,4,5      # "->"   =   "=>"
array.map: (i) -> print: i*2;   # 2,4,6,8,10
array.map: (i) -> func [] {
    print: i;
};

add:add:add 1 2 5 1

var arr = [1,2];
add: arr; # add(1,2);

1..5.map i -> print: i;
add x y = x+y;
print x = print: convert: x "string";
print: 5;

func1:func2:5;      #func1(func2(5))

var obj = object {
	int a;
	int b;
	int c;
	var add = func [int input1, int input2] {
		return input1 + input2;
	};
};

obj.add: obj.a obj.b

var k = 0;
1..10.map (i) -> k = add: i k;   #k=55

if (a > b || b != 0) {
    a = a;b++;
} else {
    b--;
};

while(a > b) {
	b++;
};

if(x == 0) {
    a+b;b++;
    b%2==0?b++;
    return a;
};

var hej = object {
    int a;
    int b;
    var add = func [int x, int y]:int {
        return x+y;
    };
};