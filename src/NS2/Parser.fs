// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"

open System
open NS2.Ast

# 11 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | PLUS
  | MINUS
  | TIMES
  | DIVIDE
  | AT
  | PIPE
  | HASH
  | PLUSPLUS
  | MINUSMINUS
  | EQ
  | NEQ
  | EQEQ
  | GE
  | LE
  | GEQ
  | LEQ
  | AND
  | OR
  | NOT
  | MODULO
  | LPAREN
  | RPAREN
  | LBRACK
  | RBRACK
  | LCURLY
  | RCURLY
  | COMMA
  | SEMICOLON
  | COLON
  | NEWLINE
  | IF
  | ELSE
  | WHILE
  | EOF
  | OPEQ of (string)
  | STRING of (string)
  | ID of (string)
  | INT of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIVIDE
    | TOKEN_AT
    | TOKEN_PIPE
    | TOKEN_HASH
    | TOKEN_PLUSPLUS
    | TOKEN_MINUSMINUS
    | TOKEN_EQ
    | TOKEN_NEQ
    | TOKEN_EQEQ
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_GEQ
    | TOKEN_LEQ
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_NOT
    | TOKEN_MODULO
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_LCURLY
    | TOKEN_RCURLY
    | TOKEN_COMMA
    | TOKEN_SEMICOLON
    | TOKEN_COLON
    | TOKEN_NEWLINE
    | TOKEN_IF
    | TOKEN_ELSE
    | TOKEN_WHILE
    | TOKEN_EOF
    | TOKEN_OPEQ
    | TOKEN_STRING
    | TOKEN_ID
    | TOKEN_INT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startmain
    | NONTERM_main
    | NONTERM_expr
    | NONTERM_op
    | NONTERM_while_expr
    | NONTERM_if_expr
    | NONTERM_pipe_expr
    | NONTERM_arr
    | NONTERM_element_list
    | NONTERM_block
    | NONTERM_body_list
    | NONTERM_call
    | NONTERM_arg_list

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | PLUS  -> 0 
  | MINUS  -> 1 
  | TIMES  -> 2 
  | DIVIDE  -> 3 
  | AT  -> 4 
  | PIPE  -> 5 
  | HASH  -> 6 
  | PLUSPLUS  -> 7 
  | MINUSMINUS  -> 8 
  | EQ  -> 9 
  | NEQ  -> 10 
  | EQEQ  -> 11 
  | GE  -> 12 
  | LE  -> 13 
  | GEQ  -> 14 
  | LEQ  -> 15 
  | AND  -> 16 
  | OR  -> 17 
  | NOT  -> 18 
  | MODULO  -> 19 
  | LPAREN  -> 20 
  | RPAREN  -> 21 
  | LBRACK  -> 22 
  | RBRACK  -> 23 
  | LCURLY  -> 24 
  | RCURLY  -> 25 
  | COMMA  -> 26 
  | SEMICOLON  -> 27 
  | COLON  -> 28 
  | NEWLINE  -> 29 
  | IF  -> 30 
  | ELSE  -> 31 
  | WHILE  -> 32 
  | EOF  -> 33 
  | OPEQ _ -> 34 
  | STRING _ -> 35 
  | ID _ -> 36 
  | INT _ -> 37 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_PLUS 
  | 1 -> TOKEN_MINUS 
  | 2 -> TOKEN_TIMES 
  | 3 -> TOKEN_DIVIDE 
  | 4 -> TOKEN_AT 
  | 5 -> TOKEN_PIPE 
  | 6 -> TOKEN_HASH 
  | 7 -> TOKEN_PLUSPLUS 
  | 8 -> TOKEN_MINUSMINUS 
  | 9 -> TOKEN_EQ 
  | 10 -> TOKEN_NEQ 
  | 11 -> TOKEN_EQEQ 
  | 12 -> TOKEN_GE 
  | 13 -> TOKEN_LE 
  | 14 -> TOKEN_GEQ 
  | 15 -> TOKEN_LEQ 
  | 16 -> TOKEN_AND 
  | 17 -> TOKEN_OR 
  | 18 -> TOKEN_NOT 
  | 19 -> TOKEN_MODULO 
  | 20 -> TOKEN_LPAREN 
  | 21 -> TOKEN_RPAREN 
  | 22 -> TOKEN_LBRACK 
  | 23 -> TOKEN_RBRACK 
  | 24 -> TOKEN_LCURLY 
  | 25 -> TOKEN_RCURLY 
  | 26 -> TOKEN_COMMA 
  | 27 -> TOKEN_SEMICOLON 
  | 28 -> TOKEN_COLON 
  | 29 -> TOKEN_NEWLINE 
  | 30 -> TOKEN_IF 
  | 31 -> TOKEN_ELSE 
  | 32 -> TOKEN_WHILE 
  | 33 -> TOKEN_EOF 
  | 34 -> TOKEN_OPEQ 
  | 35 -> TOKEN_STRING 
  | 36 -> TOKEN_ID 
  | 37 -> TOKEN_INT 
  | 40 -> TOKEN_end_of_input
  | 38 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startmain 
    | 1 -> NONTERM_main 
    | 2 -> NONTERM_main 
    | 3 -> NONTERM_main 
    | 4 -> NONTERM_expr 
    | 5 -> NONTERM_expr 
    | 6 -> NONTERM_expr 
    | 7 -> NONTERM_expr 
    | 8 -> NONTERM_expr 
    | 9 -> NONTERM_expr 
    | 10 -> NONTERM_expr 
    | 11 -> NONTERM_expr 
    | 12 -> NONTERM_expr 
    | 13 -> NONTERM_expr 
    | 14 -> NONTERM_expr 
    | 15 -> NONTERM_expr 
    | 16 -> NONTERM_expr 
    | 17 -> NONTERM_expr 
    | 18 -> NONTERM_expr 
    | 19 -> NONTERM_expr 
    | 20 -> NONTERM_expr 
    | 21 -> NONTERM_expr 
    | 22 -> NONTERM_expr 
    | 23 -> NONTERM_expr 
    | 24 -> NONTERM_expr 
    | 25 -> NONTERM_expr 
    | 26 -> NONTERM_expr 
    | 27 -> NONTERM_expr 
    | 28 -> NONTERM_expr 
    | 29 -> NONTERM_expr 
    | 30 -> NONTERM_expr 
    | 31 -> NONTERM_expr 
    | 32 -> NONTERM_expr 
    | 33 -> NONTERM_expr 
    | 34 -> NONTERM_expr 
    | 35 -> NONTERM_expr 
    | 36 -> NONTERM_op 
    | 37 -> NONTERM_op 
    | 38 -> NONTERM_while_expr 
    | 39 -> NONTERM_if_expr 
    | 40 -> NONTERM_if_expr 
    | 41 -> NONTERM_pipe_expr 
    | 42 -> NONTERM_pipe_expr 
    | 43 -> NONTERM_arr 
    | 44 -> NONTERM_arr 
    | 45 -> NONTERM_element_list 
    | 46 -> NONTERM_element_list 
    | 47 -> NONTERM_block 
    | 48 -> NONTERM_block 
    | 49 -> NONTERM_body_list 
    | 50 -> NONTERM_body_list 
    | 51 -> NONTERM_body_list 
    | 52 -> NONTERM_body_list 
    | 53 -> NONTERM_call 
    | 54 -> NONTERM_arg_list 
    | 55 -> NONTERM_arg_list 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 40 
let _fsyacc_tagOfErrorTerminal = 38

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIVIDE  -> "DIVIDE" 
  | AT  -> "AT" 
  | PIPE  -> "PIPE" 
  | HASH  -> "HASH" 
  | PLUSPLUS  -> "PLUSPLUS" 
  | MINUSMINUS  -> "MINUSMINUS" 
  | EQ  -> "EQ" 
  | NEQ  -> "NEQ" 
  | EQEQ  -> "EQEQ" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | GEQ  -> "GEQ" 
  | LEQ  -> "LEQ" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | NOT  -> "NOT" 
  | MODULO  -> "MODULO" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | LCURLY  -> "LCURLY" 
  | RCURLY  -> "RCURLY" 
  | COMMA  -> "COMMA" 
  | SEMICOLON  -> "SEMICOLON" 
  | COLON  -> "COLON" 
  | NEWLINE  -> "NEWLINE" 
  | IF  -> "IF" 
  | ELSE  -> "ELSE" 
  | WHILE  -> "WHILE" 
  | EOF  -> "EOF" 
  | OPEQ _ -> "OPEQ" 
  | STRING _ -> "STRING" 
  | ID _ -> "ID" 
  | INT _ -> "INT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIVIDE  -> (null : System.Object) 
  | AT  -> (null : System.Object) 
  | PIPE  -> (null : System.Object) 
  | HASH  -> (null : System.Object) 
  | PLUSPLUS  -> (null : System.Object) 
  | MINUSMINUS  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NEQ  -> (null : System.Object) 
  | EQEQ  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | GEQ  -> (null : System.Object) 
  | LEQ  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | MODULO  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | LCURLY  -> (null : System.Object) 
  | RCURLY  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NEWLINE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | OPEQ _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;1us;65535us;0us;1us;34us;65535us;0us;34us;5us;6us;34us;34us;35us;35us;36us;9us;37us;8us;38us;10us;39us;11us;40us;12us;41us;13us;42us;14us;43us;15us;44us;16us;45us;17us;46us;18us;47us;19us;48us;20us;49us;21us;50us;22us;53us;23us;54us;24us;55us;25us;56us;26us;72us;27us;73us;28us;75us;29us;76us;30us;77us;31us;78us;32us;79us;33us;83us;33us;85us;34us;89us;34us;92us;35us;61us;65535us;0us;56us;5us;56us;6us;36us;8us;36us;9us;36us;10us;36us;11us;36us;12us;36us;13us;36us;14us;36us;15us;36us;16us;36us;17us;36us;18us;36us;19us;36us;20us;36us;21us;36us;22us;36us;23us;36us;24us;36us;25us;36us;26us;36us;27us;36us;28us;36us;29us;36us;30us;36us;31us;36us;32us;36us;33us;36us;34us;37us;35us;37us;36us;56us;37us;56us;38us;56us;39us;56us;40us;56us;41us;56us;42us;56us;43us;56us;44us;56us;45us;56us;46us;56us;47us;56us;48us;56us;49us;56us;50us;56us;53us;56us;54us;56us;55us;56us;56us;56us;72us;56us;73us;56us;75us;56us;76us;56us;77us;56us;78us;56us;79us;56us;83us;56us;85us;56us;89us;56us;92us;56us;34us;65535us;0us;58us;5us;58us;34us;58us;35us;58us;36us;58us;37us;58us;38us;58us;39us;58us;40us;58us;41us;58us;42us;58us;43us;58us;44us;58us;45us;58us;46us;58us;47us;58us;48us;58us;49us;58us;50us;58us;53us;58us;54us;58us;55us;58us;56us;58us;72us;58us;73us;58us;75us;58us;76us;58us;77us;58us;78us;58us;79us;58us;83us;58us;85us;58us;89us;58us;92us;58us;34us;65535us;0us;57us;5us;57us;34us;57us;35us;57us;36us;57us;37us;57us;38us;57us;39us;57us;40us;57us;41us;57us;42us;57us;43us;57us;44us;57us;45us;57us;46us;57us;47us;57us;48us;57us;49us;57us;50us;57us;53us;57us;54us;57us;55us;57us;56us;57us;72us;57us;73us;57us;75us;57us;76us;57us;77us;57us;78us;57us;79us;57us;83us;57us;85us;57us;89us;57us;92us;57us;34us;65535us;0us;60us;5us;60us;34us;60us;35us;60us;36us;60us;37us;60us;38us;60us;39us;60us;40us;60us;41us;60us;42us;60us;43us;60us;44us;60us;45us;60us;46us;60us;47us;60us;48us;60us;49us;60us;50us;60us;53us;60us;54us;60us;55us;60us;56us;60us;72us;60us;73us;60us;75us;60us;76us;60us;77us;60us;78us;61us;79us;60us;83us;60us;85us;60us;89us;60us;92us;60us;34us;65535us;0us;59us;5us;59us;34us;59us;35us;59us;36us;59us;37us;59us;38us;59us;39us;59us;40us;59us;41us;59us;42us;59us;43us;59us;44us;59us;45us;59us;46us;59us;47us;59us;48us;59us;49us;59us;50us;59us;53us;59us;54us;59us;55us;59us;56us;59us;72us;59us;73us;59us;75us;59us;76us;59us;77us;59us;78us;59us;79us;59us;83us;59us;85us;59us;89us;59us;92us;59us;2us;65535us;79us;81us;83us;84us;61us;65535us;0us;64us;5us;64us;6us;62us;8us;62us;9us;62us;10us;62us;11us;62us;12us;62us;13us;62us;14us;62us;15us;62us;16us;62us;17us;62us;18us;62us;19us;62us;20us;62us;21us;62us;22us;62us;23us;62us;24us;62us;25us;62us;26us;62us;27us;62us;28us;62us;29us;62us;30us;62us;31us;62us;32us;62us;33us;62us;34us;63us;35us;63us;36us;64us;37us;64us;38us;64us;39us;64us;40us;64us;41us;64us;42us;64us;43us;64us;44us;64us;45us;64us;46us;64us;47us;64us;48us;64us;49us;64us;50us;64us;53us;64us;54us;64us;55us;64us;56us;64us;72us;64us;73us;64us;75us;64us;76us;64us;77us;64us;78us;64us;79us;64us;83us;64us;85us;64us;89us;64us;92us;64us;4us;65535us;0us;2us;34us;91us;85us;87us;89us;90us;34us;65535us;0us;67us;5us;67us;34us;67us;35us;67us;36us;67us;37us;67us;38us;67us;39us;67us;40us;67us;41us;67us;42us;67us;43us;67us;44us;67us;45us;67us;46us;67us;47us;67us;48us;67us;49us;67us;50us;67us;53us;67us;54us;67us;55us;67us;56us;67us;72us;67us;73us;67us;75us;67us;76us;67us;77us;67us;78us;67us;79us;67us;83us;67us;85us;67us;89us;67us;92us;67us;2us;65535us;35us;94us;92us;93us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;3us;38us;100us;135us;170us;205us;240us;243us;305us;310us;345us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;3us;1us;2us;3us;1us;2us;1us;3us;1us;4us;23us;4us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;1us;4us;24us;5us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;24us;29us;41us;42us;23us;5us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;23us;5us;6us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;23us;5us;6us;7us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;23us;5us;6us;7us;8us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;23us;5us;6us;7us;8us;9us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;23us;5us;6us;7us;8us;9us;10us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;23us;5us;6us;7us;8us;9us;10us;11us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;23us;5us;6us;7us;8us;9us;10us;11us;12us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;23us;5us;6us;7us;8us;9us;10us;11us;12us;13us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;23us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;23us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;23us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;23us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;23us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;18us;19us;20us;21us;22us;23us;29us;41us;42us;23us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;21us;22us;23us;29us;41us;42us;23us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;22us;23us;29us;41us;42us;23us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;23us;29us;41us;42us;23us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;24us;29us;41us;42us;23us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;38us;41us;42us;23us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;38us;41us;42us;24us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;39us;40us;41us;42us;24us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;39us;40us;41us;42us;23us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;39us;41us;42us;23us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;41us;42us;24us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;45us;46us;26us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;49us;50us;51us;52us;24us;5us;6us;7us;8us;9us;10us;11us;12us;13us;14us;15us;16us;17us;18us;19us;20us;21us;22us;23us;29us;41us;42us;54us;55us;1us;5us;3us;5us;24us;33us;1us;6us;1us;7us;1us;8us;1us;9us;1us;10us;1us;11us;1us;12us;1us;13us;1us;14us;1us;15us;1us;16us;1us;17us;1us;18us;1us;19us;1us;20us;1us;21us;1us;22us;1us;23us;2us;24us;33us;1us;25us;1us;26us;1us;27us;1us;28us;2us;28us;42us;1us;29us;2us;29us;30us;1us;30us;1us;31us;1us;32us;1us;34us;2us;35us;53us;1us;36us;1us;37us;1us;38us;1us;38us;1us;38us;2us;39us;40us;2us;39us;40us;2us;39us;40us;1us;39us;2us;41us;42us;2us;43us;44us;1us;43us;1us;44us;1us;44us;1us;46us;1us;46us;2us;47us;48us;1us;47us;1us;48us;1us;48us;2us;50us;51us;1us;51us;1us;52us;1us;53us;1us;53us;1us;55us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;8us;10us;12us;14us;38us;40us;65us;89us;113us;137us;161us;185us;209us;233us;257us;281us;305us;329us;353us;377us;401us;425us;449us;473us;497us;521us;545us;570us;595us;619us;643us;668us;695us;720us;722us;726us;728us;730us;732us;734us;736us;738us;740us;742us;744us;746us;748us;750us;752us;754us;756us;758us;760us;762us;765us;767us;769us;771us;773us;776us;778us;781us;783us;785us;787us;789us;792us;794us;796us;798us;800us;802us;805us;808us;811us;813us;816us;819us;821us;823us;825us;827us;829us;832us;834us;836us;838us;841us;843us;845us;847us;849us;|]
let _fsyacc_action_rows = 95
let _fsyacc_actionTableElements = [|10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;0us;49152us;2us;16385us;27us;3us;29us;4us;0us;16386us;0us;16387us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;23us;32768us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;16us;49us;17us;50us;18us;70us;19us;42us;21us;7us;24us;85us;34us;54us;0us;16388us;22us;16389us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;16us;49us;17us;50us;18us;70us;19us;42us;24us;85us;34us;54us;22us;16389us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;16us;49us;17us;50us;18us;70us;19us;42us;24us;85us;34us;54us;12us;16390us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;18us;70us;19us;42us;24us;85us;34us;54us;12us;16391us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;18us;70us;19us;42us;24us;85us;34us;54us;9us;16392us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;18us;70us;24us;85us;34us;54us;9us;16393us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;18us;70us;24us;85us;34us;54us;9us;16394us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;18us;70us;24us;85us;34us;54us;14us;16395us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;18us;70us;19us;42us;24us;85us;34us;54us;14us;16396us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;18us;70us;19us;42us;24us;85us;34us;54us;14us;16397us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;18us;70us;19us;42us;24us;85us;34us;54us;14us;16398us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;18us;70us;19us;42us;24us;85us;34us;54us;14us;16399us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;18us;70us;19us;42us;24us;85us;34us;54us;14us;16400us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;18us;70us;19us;42us;24us;85us;34us;54us;20us;16401us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;18us;70us;19us;42us;24us;85us;34us;54us;20us;16402us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;18us;70us;19us;42us;24us;85us;34us;54us;7us;16405us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;24us;85us;34us;54us;22us;16406us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;16us;49us;17us;50us;18us;70us;19us;42us;24us;85us;34us;54us;22us;16407us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;16us;49us;17us;50us;18us;70us;19us;42us;24us;85us;34us;54us;22us;16408us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;16us;49us;17us;50us;18us;70us;19us;42us;24us;85us;34us;54us;23us;32768us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;16us;49us;17us;50us;18us;70us;19us;42us;21us;73us;24us;85us;34us;54us;22us;16422us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;16us;49us;17us;50us;18us;70us;19us;42us;24us;85us;34us;54us;23us;32768us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;16us;49us;17us;50us;18us;70us;19us;42us;21us;76us;24us;85us;34us;54us;23us;16424us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;16us;49us;17us;50us;18us;70us;19us;42us;24us;85us;31us;77us;34us;54us;22us;16423us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;16us;49us;17us;50us;18us;70us;19us;42us;24us;85us;34us;54us;22us;16425us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;16us;49us;17us;50us;18us;70us;19us;42us;24us;85us;34us;54us;23us;16429us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;16us;49us;17us;50us;18us;70us;19us;42us;24us;85us;26us;83us;34us;54us;30us;16433us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;16us;49us;17us;50us;18us;70us;19us;42us;20us;5us;22us;79us;24us;85us;27us;89us;30us;74us;32us;71us;34us;54us;35us;66us;36us;68us;37us;65us;29us;16438us;0us;38us;1us;39us;2us;40us;3us;41us;4us;53us;5us;78us;6us;69us;7us;51us;8us;52us;9us;55us;10us;44us;11us;43us;12us;45us;13us;46us;14us;47us;15us;48us;16us;49us;17us;50us;18us;70us;19us;42us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;34us;54us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;16417us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;0us;16403us;0us;16404us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;16417us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;0us;16409us;0us;16410us;0us;16411us;0us;16412us;0us;16412us;0us;16413us;0us;16413us;0us;16414us;0us;16415us;0us;16416us;0us;16418us;1us;16419us;28us;92us;0us;16420us;0us;16421us;1us;32768us;20us;72us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;1us;32768us;20us;75us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;11us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;23us;80us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;0us;16427us;1us;32768us;23us;82us;0us;16428us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;0us;16430us;11us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;25us;86us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;0us;16431us;1us;32768us;25us;88us;0us;16432us;10us;16434us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;0us;16435us;0us;16436us;10us;32768us;6us;69us;18us;70us;20us;5us;22us;79us;24us;85us;30us;74us;32us;71us;35us;66us;36us;68us;37us;65us;0us;16437us;0us;16439us;|]
let _fsyacc_actionTableRowOffsets = [|0us;11us;12us;15us;16us;17us;28us;52us;53us;76us;99us;112us;125us;135us;145us;155us;170us;185us;200us;215us;230us;245us;266us;287us;295us;318us;341us;364us;388us;411us;435us;459us;482us;505us;529us;560us;590us;601us;612us;623us;634us;645us;656us;667us;678us;689us;700us;711us;722us;733us;744us;755us;756us;757us;768us;779us;790us;801us;802us;803us;804us;805us;806us;807us;808us;809us;810us;811us;812us;814us;815us;816us;818us;829us;840us;842us;853us;864us;875us;886us;898us;899us;901us;902us;913us;914us;926us;927us;929us;930us;941us;942us;943us;954us;955us;|]
let _fsyacc_reductionSymbolCounts = [|1us;1us;2us;2us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;2us;2us;3us;3us;3us;2us;1us;1us;1us;1us;2us;1us;1us;1us;1us;1us;1us;1us;1us;5us;7us;5us;3us;3us;2us;3us;1us;3us;2us;3us;1us;2us;3us;2us;3us;1us;2us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;1us;1us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;2us;3us;3us;4us;5us;5us;6us;6us;7us;7us;8us;8us;9us;9us;10us;10us;10us;10us;11us;12us;12us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;16386us;16387us;65535us;65535us;16388us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16403us;16404us;65535us;65535us;65535us;65535us;16409us;16410us;16411us;16412us;65535us;16413us;65535us;16414us;16415us;16416us;16418us;65535us;16420us;16421us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16427us;65535us;16428us;65535us;16430us;65535us;16431us;65535us;16432us;65535us;16435us;16436us;65535us;16437us;16439us;|]
let _fsyacc_reductions = lazy [|
# 355 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> NS2.Ast.AST in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startmain));
# 364 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_body_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 32 "Parser.fsy"
                                                Root _1 
                   )
# 32 "Parser.fsy"
                 : NS2.Ast.AST));
# 375 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_body_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 33 "Parser.fsy"
                                                Root _1 
                   )
# 33 "Parser.fsy"
                 : NS2.Ast.AST));
# 386 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_body_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 34 "Parser.fsy"
                                                Root _1 
                   )
# 34 "Parser.fsy"
                 : NS2.Ast.AST));
# 397 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 37 "Parser.fsy"
                                                    _2 
                   )
# 37 "Parser.fsy"
                 : 'gentype_expr));
# 408 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_op in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 38 "Parser.fsy"
                                                Binop (_1, _2, _3) 
                   )
# 38 "Parser.fsy"
                 : 'gentype_expr));
# 421 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 39 "Parser.fsy"
                                              Binop (_1, "+", _3) 
                   )
# 39 "Parser.fsy"
                 : 'gentype_expr));
# 433 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 40 "Parser.fsy"
                                              Binop (_1, "-", _3) 
                   )
# 40 "Parser.fsy"
                 : 'gentype_expr));
# 445 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 41 "Parser.fsy"
                                              Binop (_1, "*", _3) 
                   )
# 41 "Parser.fsy"
                 : 'gentype_expr));
# 457 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 42 "Parser.fsy"
                                                Binop (_1, "/", _3) 
                   )
# 42 "Parser.fsy"
                 : 'gentype_expr));
# 469 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 43 "Parser.fsy"
                                                            Binop(_1, "%", _3) 
                   )
# 43 "Parser.fsy"
                 : 'gentype_expr));
# 481 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "Parser.fsy"
                                                               Binop(_1, "==", _3) 
                   )
# 45 "Parser.fsy"
                 : 'gentype_expr));
# 493 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "Parser.fsy"
                                                               Binop(_1, "!=", _3) 
                   )
# 46 "Parser.fsy"
                 : 'gentype_expr));
# 505 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 47 "Parser.fsy"
                                                               Binop(_1, ">",  _3) 
                   )
# 47 "Parser.fsy"
                 : 'gentype_expr));
# 517 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 48 "Parser.fsy"
                                                               Binop(_1, "<",  _3) 
                   )
# 48 "Parser.fsy"
                 : 'gentype_expr));
# 529 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "Parser.fsy"
                                                               Binop(_1, ">=", _3) 
                   )
# 49 "Parser.fsy"
                 : 'gentype_expr));
# 541 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "Parser.fsy"
                                                               Binop(_1, "<=", _3) 
                   )
# 50 "Parser.fsy"
                 : 'gentype_expr));
# 553 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "Parser.fsy"
                                                               Binop(_1, "&&", _3) 
                   )
# 52 "Parser.fsy"
                 : 'gentype_expr));
# 565 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "Parser.fsy"
                                                               Binop(_1, "||", _3) 
                   )
# 53 "Parser.fsy"
                 : 'gentype_expr));
# 577 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "Parser.fsy"
                                                               Assign (_1, Binop(_1, "+", Int 1)) 
                   )
# 55 "Parser.fsy"
                 : 'gentype_expr));
# 588 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "Parser.fsy"
                                                               Assign (_1, Binop(_1, "-", Int 1)) 
                   )
# 56 "Parser.fsy"
                 : 'gentype_expr));
# 599 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "Parser.fsy"
                                             Index (_1, _3) 
                   )
# 58 "Parser.fsy"
                 : 'gentype_expr));
# 611 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "Parser.fsy"
                                                            Assign (_1, Binop(_1, _2[.._2.Length-2], _3)) 
                   )
# 59 "Parser.fsy"
                 : 'gentype_expr));
# 624 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "Parser.fsy"
                                                            Assign (_1, _3) 
                   )
# 60 "Parser.fsy"
                 : 'gentype_expr));
# 636 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_op in
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "Parser.fsy"
                                                            Unop (_1, _2) 
                   )
# 61 "Parser.fsy"
                 : 'gentype_expr));
# 648 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_if_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "Parser.fsy"
                                                            _1 
                   )
# 62 "Parser.fsy"
                 : 'gentype_expr));
# 659 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_while_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "Parser.fsy"
                                                            _1 
                   )
# 63 "Parser.fsy"
                 : 'gentype_expr));
# 670 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_arr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "Parser.fsy"
                                      _1 
                   )
# 64 "Parser.fsy"
                 : 'gentype_expr));
# 681 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_pipe_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "Parser.fsy"
                                          Pipe _1 
                   )
# 65 "Parser.fsy"
                 : 'gentype_expr));
# 692 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "Parser.fsy"
                                              Map (_1, _2) 
                   )
# 66 "Parser.fsy"
                 : 'gentype_expr));
# 704 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "Parser.fsy"
                                                _1 
                   )
# 67 "Parser.fsy"
                 : 'gentype_expr));
# 715 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "Parser.fsy"
                                     Int _1 
                   )
# 68 "Parser.fsy"
                 : 'gentype_expr));
# 726 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "Parser.fsy"
                                       String _1 
                   )
# 69 "Parser.fsy"
                 : 'gentype_expr));
# 737 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_op in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "Parser.fsy"
                                    Id _1 
                   )
# 70 "Parser.fsy"
                 : 'gentype_expr));
# 748 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_call in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "Parser.fsy"
                                         _1 
                   )
# 71 "Parser.fsy"
                 : 'gentype_expr));
# 759 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "Parser.fsy"
                                    Id _1 
                   )
# 72 "Parser.fsy"
                 : 'gentype_expr));
# 770 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "Parser.fsy"
                                                               "#"  
                   )
# 75 "Parser.fsy"
                 : 'gentype_op));
# 780 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "Parser.fsy"
                                                               "!"  
                   )
# 76 "Parser.fsy"
                 : 'gentype_op));
# 790 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "Parser.fsy"
                                                         While (_3,_5) 
                   )
# 79 "Parser.fsy"
                 : 'gentype_while_expr));
# 802 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "Parser.fsy"
                                                                       If(_3,_5,Some _7)
                   )
# 82 "Parser.fsy"
                 : 'gentype_if_expr));
# 815 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "Parser.fsy"
                                                                       If(_3,_5, None)
                   )
# 83 "Parser.fsy"
                 : 'gentype_if_expr));
# 827 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "Parser.fsy"
                                                               [_1;_3] 
                   )
# 86 "Parser.fsy"
                 : 'gentype_pipe_expr));
# 839 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_pipe_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "Parser.fsy"
                                                               _1::_3 
                   )
# 87 "Parser.fsy"
                 : 'gentype_pipe_expr));
# 851 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "Parser.fsy"
                                             Array [] 
                   )
# 90 "Parser.fsy"
                 : 'gentype_arr));
# 861 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_element_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "Parser.fsy"
                                                      Array _2 
                   )
# 91 "Parser.fsy"
                 : 'gentype_arr));
# 872 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "Parser.fsy"
                                      [_1] 
                   )
# 94 "Parser.fsy"
                 : 'gentype_element_list));
# 883 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_element_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "Parser.fsy"
                                                     _1 :: _3 
                   )
# 95 "Parser.fsy"
                 : 'gentype_element_list));
# 895 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "Parser.fsy"
                                             Block [] 
                   )
# 98 "Parser.fsy"
                 : 'gentype_block));
# 905 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_body_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "Parser.fsy"
                                                    Block _2 
                   )
# 99 "Parser.fsy"
                 : 'gentype_block));
# 916 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "Parser.fsy"
                                      [_1] 
                   )
# 102 "Parser.fsy"
                 : 'gentype_body_list));
# 927 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "Parser.fsy"
                                             [_1] 
                   )
# 103 "Parser.fsy"
                 : 'gentype_body_list));
# 938 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_body_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "Parser.fsy"
                                                      _1 :: _3 
                   )
# 104 "Parser.fsy"
                 : 'gentype_body_list));
# 950 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_body_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "Parser.fsy"
                                                    _1 :: _2 
                   )
# 105 "Parser.fsy"
                 : 'gentype_body_list));
# 962 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "Parser.fsy"
                                                                     Call (_1, _3)
                   )
# 108 "Parser.fsy"
                 : 'gentype_call));
# 974 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "Parser.fsy"
                                      [_1] 
                   )
# 111 "Parser.fsy"
                 : 'gentype_arg_list));
# 985 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "Parser.fsy"
                                                   _1 :: _2 
                   )
# 112 "Parser.fsy"
                 : 'gentype_arg_list));
|]
# 998 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 41;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let main lexer lexbuf : NS2.Ast.AST =
    engine lexer lexbuf 0 :?> _
